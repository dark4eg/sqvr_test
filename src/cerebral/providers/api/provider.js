import gql from 'graphql-tag';const allHistory = gql`query {    users {          history(limit: 10, offset: 0) {            date            historyType            systemText            documents {              id              mimetype            }            body            user {              id              firstName              lastName              avatarUrl            }            updater {              id              firstName              lastName              avatarUrl            }          }    }}`;// const allHistoryUser = gql`// query allHistory($limit: Int!, $offset: Int!, $filters: Array, $userId: Int!) {//         users($userId) {//           history(limit: $limit, offset: $offset, historyType: filters}) {//             date//             historyType//             systemText//             documents {//               id//               mimetype//             }//             body//             user {//               id//               firstName//               lastName//               avatarUrl//             }//             updater {//               id//               firstName//               lastName//               avatarUrl//             }//           }//         }//       }// `;const api = {    async getHistory({apollo, props: {limit, offset, filters, userId}}) {        // const query = userId ? {        //     query: allHistoryUser,        //     variables: {        //         limit,        //         offset,        //         filters,        //         userId        //     },        // } : {        //     query: allHistory,        //     variables: {        //         limit,        //         offset,        //         filters,        //     },        // };        const query = {            query: allHistory,            variables: {                limit,                offset,                filters,            },        };        const queryResult = await apollo.query(query);        const {data} = queryResult;        return {            list: data.h,            meta: {                limit: limit,                offset: offset,            }        };    },};export default api;