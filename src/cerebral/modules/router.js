import page from 'page';import qs from 'query-string';import { routeToRoot, routeToRegistry, routeToNotFound } from '../sequences';import Root from "../../components/pages/Root";import NotFound from "../../components/pages/NotFound";export default ({ app }) => {    app.on('initialized', () => {        console.log('ggg initialized');        page.start();    });    // We create a route factory which takes the route url and    // the sequences that should run when it triggers. It does two things    //    //  1. It register the route to page.js which runs the sequence using the    //     path as the name of the execution, the sequence and passes in any    //     params    //    //  2. It returns an action that you can run from your views, mapping    //     the "props.params" passed in into the related url. Then triggers    //     the url    function route(url, sequence) {        page(url, ({ path, params }) => app.runSequence(path, sequence, { params }))        return ({ props }) => {            const urlWithReplacedParams = Object.keys(props.params || {}).reduce((currentUrl, param) => {                return currentUrl.replace(`:${param}`, props.params[param])            }, url)            page.show(urlWithReplacedParams)        }    }    return {        sequences: {            routeToRoot: route('/', routeToRoot),            routeToRegistry: route('/history/registry/', routeToRegistry),            routeToUsers: route('/history/user/:userId', routeToRegistry),            notFound: route('*', routeToNotFound)        }    }}