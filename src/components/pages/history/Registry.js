import Typography from '@material-ui/core/Typography';import Card from '@material-ui/core/Card';import CardContent from '@material-ui/core/CardContent';import React, { Fragment } from 'react';// import { connect } from 'cerebral/react';import { Query } from 'react-apollo';import gql from 'graphql-tag';import Filter from '../../common/Filter';import Header from '../../common/Header';import RegistryCard from '../../common/Cards/Registry';import FilterHoc from './utils/FilterHOC';import filterList from './utils/filterList';const Registry = props => {  const activeFilters = props.filters.filter(i => i.isActive).map(i => ` ${i.value}`);  const gqlHistoryTypeFilter = activeFilters.length > 0 ? `, historyType: [${activeFilters}]` : '';  console.log('wtf?', gqlHistoryTypeFilter);  return (    <Query      query={gql`      query {        users {          history(limit: 10${gqlHistoryTypeFilter}) {            date            historyType            systemText            documents {              id              mimetype            }            body            user {              id              firstName              lastName              avatarUrl            }            updater {              id              firstName              lastName              avatarUrl            }          }        }      }    `}    >      {({ loading, error, data }) => {        const { filterIsActive, toggleFilter, changeFilter, filters } = props;        let resultView;        if (loading) {          resultView = <p>Loading...</p>;        } else if (error) {          resultView = <p>Error :(</p>;        }        if (resultView) {          return resultView;        }        return (          <div className="content">            <Card className={''}>              <Header toggleFilter={toggleFilter} />              <CardContent>                {filterIsActive && <Filter filters={filters} changeFilter={changeFilter} />}                {data.users.history.map((h, i) => (                  <RegistryCard key={i} data={h} />                ))}              </CardContent>            </Card>          </div>        );      }}    </Query>  );};export default FilterHoc(filterList)(Registry);// export const newRegistry = connect(//     {//         filters: 'app.history.registry.filters.**',//         users: 'app.history.registry.items.**',//     },//     {//         fetch : 'app.fetchHistoryRegistry'//     },//     Registry// );